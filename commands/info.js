const packageJson = require('../package.json');

async function infoCommand() {
  console.log('\nðŸ§± NestCraftX v' + packageJson.version);
  console.log('Clean Architecture Generator for NestJS');
  console.log('â”€'.repeat(50));

  console.log('\nâœ… ORMs supportÃ©s:');
  console.log('   â€¢ Prisma   - ORM moderne et type-safe');
  console.log('   â€¢ TypeORM  - ORM complet avec decorateurs');
  console.log('   â€¢ Mongoose - ODM pour MongoDB');

  console.log('\nâœ… Modes disponibles:');
  console.log('   â€¢ Light - Configuration rapide pour POCs');
  console.log('   â€¢ Full  - Configuration complÃ¨te et personnalisÃ©e');

  console.log('\nâœ… FonctionnalitÃ©s:');
  console.log('   â€¢ Clean Architecture avec DDD');
  console.log('   â€¢ Auth JWT intÃ©grÃ©e');
  console.log('   â€¢ Documentation Swagger');
  console.log('   â€¢ Docker & Docker Compose');
  console.log('   â€¢ GÃ©nÃ©ration d\'entitÃ©s automatique');
  console.log('   â€¢ Use Cases pattern');
  console.log('   â€¢ Repository pattern');

  console.log('\nðŸ“¦ GitHub:');
  console.log('   ' + packageJson.repository.url);

  console.log('\nðŸ“… Prochainement:');
  console.log('   â€¢ Middlewares personnalisÃ©s');
  console.log('   â€¢ Support microservices');
  console.log('   â€¢ Templates CI/CD');
  console.log('   â€¢ GraphQL integration');
  console.log('   â€¢ Tests automatiques');

  console.log('\nðŸ’¡ Commandes disponibles:');
  console.log('   nestcraftx new <name> [options]  CrÃ©er un projet');
  console.log('   nestcraftx demo                  Projet de dÃ©mo');
  console.log('   nestcraftx test                  VÃ©rifier l\'environnement');
  console.log('   nestcraftx info                  Afficher ces informations');
  console.log('   nestcraftx --help                Aide complÃ¨te');

  console.log('\nðŸ‘¤ Auteur: ' + packageJson.author);
  console.log('ðŸ“„ Licence: ' + packageJson.license);
  console.log('');
}

module.exports = infoCommand;
